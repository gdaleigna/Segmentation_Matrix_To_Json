import numpy as np
import random
import time

start_time = time.time()

# CLASS
class SegmentationMatrix:
    def __init__(self):
        self.x = 3
        self.y = 3
        self.z = 2
        self.mode = 1
        self.segmentationMatrix = np.zeros((self.z, self.x, self.y, self.mode))

    def createNewMatrix(self, x, y, z, mode):
        self.x = x
        self.y = y
        self.z = z
        self.mode = mode
        self.segmentationMatrix = np.zeros((z, x, y, mode))

    def copyMatrixFromNumpyArray(self, numpyArray):
        if numpyArray.ndim == 4:
            self.x = np.shape(numpyArray)[1]
            self.y = np.shape(numpyArray)[2]
            self.z = np.shape(numpyArray)[0]
            self.mode = np.shape(numpyArray)[3]
            self.segmentationMatrix = numpyArray

    def generateRandomSegmentation(self):
        for i in range(0, self.z):
            for j in range(0, self.x):
                for k in range(0, self.y):
                    self.segmentationMatrix[i][j][k][0] = 1 if random.randint(0, 3) == 1 else 0

    def displayMatrix(self):
        print("Segmentation Size is", self.x, "x", self.y, "with", self.z, "image(s) and", self.mode, "mode(s).")
        for i in range(0, self.z):
            for j in range(0, self.x):
                for k in range(0, self.y):
                    if self.segmentationMatrix[i][j][k][0] > 0:
                        print(int(self.segmentationMatrix[i][j][k][0]), end='')
                    else:
                        print(".", end='')

                    print(" ", end='')

                print()
            print()


# MAIN
seg = SegmentationMatrix()
# seg.copyMatrixFromNumpyArray(segmentationMatrix)
seg.createNewMatrix(12, 12, 5, 2)
seg.generateRandomSegmentation()
seg.displayMatrix()

# TIMER
print("--- %s seconds ---" % (time.time() - start_time))

